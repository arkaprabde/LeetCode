{"leetcode":{"easy":1,"hard":6,"medium":8,"shas":{"2493-reverse-odd-levels-of-binary-tree":{"2493-reverse-odd-levels-of-binary-tree.java":"3d741df39abe06b2332e83d9888a05e71b805a31","README.md":"b5dd3a112647e1f67446439450d976d26fc3c5a0","difficulty":"medium"},"README.md":{"":"67411179ef66bb880219f68fa40e59e880ebc87d"},"3518-maximum-multiplication-score":{"3518-maximum-multiplication-score.java":"bbad9a89143b85ad027a92f2041bdc82757096e4","README.md":"e057c9c084fa1a63c0b3a61f3dada1edb15d40fe","difficulty":"medium"},"3058-maximum-number-of-k-divisible-components":{"3058-maximum-number-of-k-divisible-components.java":"7a1cc810f8c9d70f3e89c7eb66d5703989487d76","README.md":"3daa5e177baadc7e31f3561abec9c52a0b595672","difficulty":"hard"},"stats.json":{"":"8bd847add38e917c8e7ccce44a0d0e1277b4c78b"},"3659-count-paths-with-the-given-xor-value":{"3659-count-paths-with-the-given-xor-value.java":"a7b6a5d92c99154021c4529f01db11d225321dc8","README.md":"692a4e0b796b432631a44f884d6b6277f3d7ce03","difficulty":"medium"},"3181-find-building-where-alice-and-bob-can-meet":{"3181-find-building-where-alice-and-bob-can-meet.java":"9d219fee0128657986797afff0298851f10ff283","README.md":"9ee5d3eabcf1623ac58a7497f767adfffcb24137","difficulty":"hard"},"3620-maximum-number-of-distinct-elements-after-operations":{"3620-maximum-number-of-distinct-elements-after-operations.java":"14b879d6c4277a6489555209fd9ff7a416602c23","README.md":"5d56b92bc30cf2a4d61e50522aab106b718d4348","difficulty":"medium"},"2558-minimum-number-of-operations-to-sort-a-binary-tree-by-level":{"2558-minimum-number-of-operations-to-sort-a-binary-tree-by-level.java":"d0d8b48bb304840c406be2739501604bbe2f9a4f","README.md":"66de5080ab2cec7e393f445e31908b051329c5d6","difficulty":"medium"},"3439-find-minimum-diameter-after-merging-two-trees":{"3439-find-minimum-diameter-after-merging-two-trees.java":"d4db923b85769df90874afda10241132f8f48955","README.md":"8ae98f2fad2638ffa5ae39e1d0c72bcd25aa06d3","difficulty":"hard"},"3656-minimum-number-of-operations-to-make-elements-in-array-distinct":{"3656-minimum-number-of-operations-to-make-elements-in-array-distinct.java":"84d1f7b3f315a31d301830c51c89800bb3ce6c3c","README.md":"4d1e48ed308ae584d83c385a0398638164af6609","difficulty":"easy"},"0515-find-largest-value-in-each-tree-row":{"0515-find-largest-value-in-each-tree-row.java":"3494c78752433203255295e03a98fc295d30785e","README.md":"4ab9cf8a8f8c992b2b271843a6033c13dfb3f1b5","difficulty":"medium"},"1063-best-sightseeing-pair":{"1063-best-sightseeing-pair.java":"b4cf2e57b187b0cf121d85d28fac890a71fd7a04","README.md":"d8c806b95df779a369d652d4b198baf154567149","difficulty":"medium"},"0689-maximum-sum-of-3-non-overlapping-subarrays":{"0689-maximum-sum-of-3-non-overlapping-subarrays.java":"5d410e02cefcc2e18d3791c0276d876287128d78","README.md":"070fe2d548f3b851761c5c8085ff4219ef229e2c","difficulty":"hard"},"3699-count-special-subsequences":{"3699-count-special-subsequences.java":"8140bb1745c8a49ca1cdda75d9cc4155f4c484bc","README.md":"6876ec378353f227db5fda531c3e6600a182bd94","difficulty":"medium"},"1744-number-of-ways-to-form-a-target-string-given-a-dictionary":{"1744-number-of-ways-to-form-a-target-string-given-a-dictionary.java":"fa07e0249c66f8de9aee08d953673e38fdd6a089","README.md":"c194921b0c2d3d032fd4c4c8ee8e96481adc03ca","difficulty":"hard"},"3682-count-the-number-of-arrays-with-k-matching-adjacent-elements":{"3682-count-the-number-of-arrays-with-k-matching-adjacent-elements.java":"5e7893adcf4e46198a934527be1a394041b05ad3","README.md":"f33837b17ad00642cb31b7108864f9a8661e119b","difficulty":"hard"}},"solved":15}}